@namespace codenames_solver
@inject DataState DataState
@implements IDisposable

<div class="position-relative" id="similarity-items-sidebar" style="color: rgba(233, 233, 233, 0.8)">
    <Loading IsLoading="@isLoading" />
    <h5>Similarities</h5>
    @foreach (var SimilarityItem in similarityItems)
    {
        <SimilarityItemCell SimilarityItem="@SimilarityItem" />
    }
</div>

@code {
    List<SimilarityGeneratorItem> similarityItems => DataState.CurrentSimilarityItems;
    bool isLoading => DataState.IsLoadingSimilarity;

    protected override void OnInitialized()
    {
        DataState.StateChanged += async (Property)
            => await InvokeAsync(StateHasChanged);
    }

    void IDisposable.Dispose()
    {
        DataState.StateChanged -= async (Property)
            => await InvokeAsync(StateHasChanged);
    }
}

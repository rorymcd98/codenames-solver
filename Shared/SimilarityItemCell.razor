<div class="similarity-item-cell px-3">
    <h6 class="heading">@heading</h6>
    <ul class="related-words">
        @foreach (string relatedWord in SimilarityItem?.RelatedWords ?? new())
        {
            <li>@relatedWord</li>
        }
    </ul>
    <h6 class="codewords-heading">Codewords:</h6>
    <div class="toggle-button">
        <button class="btn btn-link p-0" @onclick="Toggle" style="color: black;">
            @(isExpanded ? "See less" : "See more")
        </button>
    </div>
    <div class="codeword-scores">
        @foreach (var codeWord in CodeWordScores.Take(nToTake))
        {
            <div class="codeword-score">
                <strong>@codeWord.Item1:</strong> @Math.Round(codeWord.Item2, 1)
            </div>
            if (codeWord != CodeWordScores.Take(nToTake).Last())
            {
                <hr class="divider" />
            }
        }
    </div>
</div>

@code {
    [Parameter]
    public SimilarityGeneratorItem? SimilarityItem { get; set; }

    string heading => $"Relating to:";
    bool isExpanded = false;
    List<Tuple<string, double>> CodeWordScores => SimilarityItem?.CodeWordScores ?? new List<Tuple<string, double>>();
    int nToTake => isExpanded ? 100 : 1;
    void Toggle()
    {
        isExpanded = !isExpanded;
    }
}
